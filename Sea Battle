//морской бой

#include <iostream>
#include <windows.h>
#include <string>

#define HOD20 20
using namespace std;

void POLE(string x[][10] /* a,a2,a01,a02, a0[][] */, string y[] /* b[] */)
{
	cout << "  ";
	for (int i = 1; i < 10; i++)
		cout << i;
	cout << "0" << endl;
	for (int i = 0; i < 10; i++)
	{
		cout << y[i] << "|";
		for (int j = 0; j < 10; j++)
			cout << x[i][j];
		cout << "|" << y[i] << endl;
	}
	cout << "  ";
	for (int i = 1; i < 10; i++)
		cout << i;
	cout << "0" << endl;
}
void KORABLI(string hAK, int h10, string z[][10], string b1[])
{
	for (int i = 0; i < 10; i++) // Установка кораблей на поле
	{
		if (hAK == b1[i])
			for (int j = 0; j < 10; j++)
				if (h10 == j + 1)
					z[i][j] = "+";
	}
}
void PRAVILA(void)
{
	cout << "++++ - 4-х палубный корабль - 1 шт." << endl;
	cout << "+++ - 3-х палубных кораблей - 2 шт." << endl;
	cout << "++ - 2-х палубных кораблей - 3 шт." << endl;
	cout << "+ - однопалубных кораблей - 4 шт." << endl;
	cout << "**********************************************************" << endl;
	cout << "ВНИМАНИЕ!!! Проверка на правильность расстановки кораблей\nНЕ производится! Следите за правильностью расстановки\nсамостоятельно!" << endl;
	cout << "ПРАВИЛА:" << endl;
	cout << "Корабли можно располагать либо по горизонтали\nлибо по вертикали." << endl;
	cout << "Каждый корабль должен располагаться в одну линию." << endl;
	cout << "Между кораблями должна быть хотя бы одна свободная ячейка\n(в том числе по диагонали)." << endl;
	cout << "**********************************************************" << endl;
}
int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	string a1[10][10]/*Поле с кораблями 1*/, a2[10][10] /*Поле с кораблями 2*/;
	string a01[10][10] /* Ход 1, угад-ся а2 */, a02[10][10] /* Ход 2, угад-ся а1 */, hodAK;
	string b[] = { "A", "B", "C", "D", "E", "F", "G", "H", "J", "K" };
	int hod10, schetKorabley = 0;
	string HOD_1igr = "Ход первого игрока:";
	string HOD_2igr = "Ход второго игрока:";
	//***********************
	//Инициализация полей "'"
	//***********************
	for (int i = 0; i < 10; i++)
		for (int j = 0; j < 10; j++)
		{
			a1[i][j] = "'";
			a2[i][j] = "'";
			a01[i][j] = "'";
			a02[i][j] = "'";
		}
	
	//******************************
	// 1 игрок устанавливает корабли
	//******************************
	do
	{
		system("cls");
		cout << "Установка кораблей первого игрока на поле боя." << endl;
		PRAVILA();
		cout << HOD_1igr << endl;
		POLE(a1, b);
		cout << "Введите номер ячейки в формате:" << endl << "буква (от А до K), пробел," << endl << "цифра (от 1 до 10)" << endl;
		cin >> hodAK >> hod10;
		KORABLI(hodAK, hod10, a1, b);
			schetKorabley++;
	} 
	while (schetKorabley != HOD20); // ходы 20

	cin.get();
	system("cls");

	cout << "Установка кораблей первого игрока на поле боя." << endl;
	cout << HOD_1igr << endl;
	POLE(a1, b);

	cout << "Для передачи хода второму игроку нажмите ввод...";
	cin.get();
	system("cls");

	//******************************
	// 2 игрок устанавливает корабли
	//******************************
	schetKorabley = 0; 
	do
	{
		system("cls");
		cout << "Установка кораблей второго игрока на поле боя." << endl;
		PRAVILA();
		cout << HOD_2igr << endl;
		POLE(a2, b);

		cout << "Введите номер ячейки в формате:" << endl << "буква (от А до K), пробел," << endl << "цифра (от 1 до 10)" << endl;
		cin >> hodAK >> hod10;

		KORABLI(hodAK, hod10, a2, b);
		schetKorabley++;
	} while (schetKorabley != HOD20); // ходы 20

	cin.get();
	system("cls");

	cout << "Установка кораблей второго игрока на поле боя." << endl;
	cout << HOD_2igr << endl;
	POLE(a2, b);

	cout << "Для передачи хода первому игроку нажмите ввод...";
	cin.get();
	system("cls");

	schetKorabley = 0; //обнуляем счетчик кораблей
	int schetKorabley2 = 0;
	//******************
	//БОЙ!!!!!!!!!!!!!!!
	//******************
	cout << "В бой!!!" << endl; 
	while (true)
	{
	//*************
	// 1 игрок бьет
	//*************

		int boy = 2;
		do
		{
			system("cls");
			if (boy == 1)
				cout << "Ранен!" << endl;
			if (boy == 0)
			{
				cout << "Убит!" << endl;
			}
			cout << HOD_1igr << endl;
			POLE(a01, b);

			cout << "Введите номер ячейки в формате:" << endl << "буква (от А до K), пробел," << endl << "цифра (от 1 до 10)" << endl;
			cin >> hodAK >> hod10;

			for (int i = 0; i < 10; i++)
			{
				if (hodAK == b[i])
					for (int j = 0; j < 10; j++)
						if (hod10 == j + 1)
						{
							if (a2[i][j] == "+") // текущая клетка обозначилась +
							{
								a01[i][j] = "X";
								a2[i][j] = "X";
								schetKorabley++;
								if (i == 0)  // линия А
								{
									if ((a2[i + 1][j] == "+") || (a2[i][j - 1] == "+") || (a2[i][j + 1] == "+"))
										boy = 1;
									else boy = 0; 
								}
								if (i == 9) // линия K
								{
									if ((a2[i - 1][j] == "+") || (a2[i][j - 1] == "+") || (a2[i][j + 1] == "+"))
										boy = 1;
									else boy = 0;
								}
								if (j == 0) // линия 1
								{
									if ((a2[i - 1][j] == "+") || (a2[i + 1][j] == "+") || (a2[i][j + 1] == "+"))
										boy = 1;
									else boy = 0;
								}
								if (j == 9) // линия 10
								{
									if ((a2[i - 1][j] == "+") || (a2[i][j - 1] == "+") || (a2[i + 1][j] == "+"))
										boy = 1;
									else boy = 0;
								}
								if ((i != 0) && (i != 9) && (j != 0) && (j != 9)) // остальные клетки не крайние
								{
									if ((a2[i - 1][j] == "+") || (a2[i][j - 1] == "+") || (a2[i + 1][j] == "+") || (a2[i][j + 1] == "+"))
										boy = 1;
									else boy = 0;
								}
							}
							else
							{
								a01[i][j] = "0";
								boy = 3;  
								//"Мимо!"
							}
						}
			}

		} while ((boy != 3) && (schetKorabley < HOD20));

		cin.get();
		system("cls");

		cout << HOD_1igr << endl;
		POLE(a01, b);

		if (boy == 3)
			cout << "Мимо! Для передачи хода второму игроку нажмите ввод...";
		if (schetKorabley == HOD20)
		{
			cout << "Победил 1 игрок!" << endl << "Для выхода из игры нажмите ввод...";
			cin.get();
			return 0;
		}

		cin.get();
		system("cls");
		
		boy = 2;

		//*************
		// 2 игрок бьет
		//*************

		do
		{
			system("cls");
			if (boy == 1)
				cout << "Ранен!" << endl;
			if (boy == 0)
				cout << "Убит!" << endl;
			cout << HOD_2igr << endl;
			POLE(a02, b);

			cout << "Введите номер ячейки в формате:" << endl << "буква (от А до K), пробел," << endl << "цифра (от 1 до 10)" << endl;
			cin >> hodAK >> hod10;

			for (int i = 0; i < 10; i++)
			{
				if (hodAK == b[i])
					for (int j = 0; j < 10; j++)
						if (hod10 == j + 1)
						{
							if (a1[i][j] == "+") // текущая клетка обозначилась +
							{
								a02[i][j] = "X";
								a1[i][j] = "X";
								schetKorabley2++;
								if (i == 0)  // линия А
								{
									if ((a1[i + 1][j] == "+") || (a1[i][j - 1] == "+") || (a1[i][j + 1] == "+"))
										boy = 1;
									else boy = 0; 
								}
								if (i == 9) // линия K
								{
									if ((a1[i - 1][j] == "+") || (a1[i][j - 1] == "+") || (a1[i][j + 1] == "+"))
										boy = 1;
									else boy = 0;
								}
								if (j == 0) // линия 1
								{
									if ((a1[i - 1][j] == "+") || (a1[i + 1][j] == "+") || (a1[i][j + 1] == "+"))
										boy = 1;
									else boy = 0;
								}
								if (j == 9) // линия 10
								{
									if ((a1[i - 1][j] == "+") || (a1[i][j - 1] == "+") || (a1[i + 1][j] == "+"))
										boy = 1;
									else boy = 0;
								}
								if ((i != 0) && (i != 9) && (j != 0) && (j != 9)) // остальные клетки не крайние
								{
									if ((a1[i - 1][j] == "+") || (a1[i][j - 1] == "+") || (a1[i + 1][j] == "+") || (a1[i][j + 1] == "+"))
										boy = 1;
									else boy = 0;
								}
							}
							else
							{
								a02[i][j] = "0";
								boy = 3;  
								//"Мимо!"
							}
						}
			}

		} while ((boy != 3) && (schetKorabley2 < HOD20));


		cin.get();
		system("cls");

		cout << HOD_2igr << endl;
		POLE(a02, b);

		if (boy == 3)
		{
			cout << "Мимо! Для передачи хода первому игроку нажмите ввод...";
		}
		if (schetKorabley2 == HOD20)
		{
			cout << "Победил 2 игрок!" << endl << "Для выхода из игры нажмите ввод...";
			cin.get();
			return 0;
		}

			cin.get();
	} // CIRCLE
	cin.get();
	return 0;
}
